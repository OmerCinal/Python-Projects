MATH 103 Calculus I - Differential
Differential calculus including analytic geometry; functions, limits and continuity; derivatives, techniques and applications of differentiation; logarithmic and trigonometric functions.
MATH 104 Calculus II - Integral
Integral calculus including definite and indefinite integrals; techniques of integration; applications in mathematics and engineering; infinite series. (Prerequisite: MATH 201 or consent of instructor).
PHYS 103 Physics I - Mechanics and Dynamics
Introduction to classical mechanics for students in engineering and the physical sciences. Measurement, units, and foundations of physics; vectors; kinematics; circular motion; forces, mass, and Newton's laws; center of mass; momentum; work and energy; conservation laws; collisions; rotational kinematics.
PHYS 103L Physics I - Lab: Mechanics and Dynamics
Lab work on foundations of physics; vectors; kinematics; circular motion; forces, mass, and Newton's laws; center of mass; momentum; work and energy; conservation laws; collisions; rotational kinematics.
PHYS 104 Physics II - Electromagnetics and Moderns Physics
Rotational dynamics and angular momentum; equilibrium and elasticity; periodic motion including LRC electrical circuits; gravitation; fluid mechanics; temperature; thermal expansion; heat and the first law of thermodynamics; heat conduction; kinetic theory of gases; entropy and the second law; heat engines. (Prerequisite: PHYS 203 or consent of instructor).
PHYS 104L Physics II - Lab: Electromagnetics and Moderns Physics
Lab work on rotational dynamics and angular momentum; equilibrium and elasticity; periodic motion including LRC electrical circuits; gravitation; fluid mechanics; temperature; thermal expansion; heat and the first law of thermodynamics; heat conduction; kinetic theory of gases; entropy and the second law; heat engines. (Prerequisite: PHYS 203 or consent of instructor).
LIFE 101 Life Sciences I - Biology
Fundamentals of living creatures, cell structures, bio system; its relation with human activities.
LIFE 102 Life Sciences II - Chemistry
Basics of matters, elements and their compound under different circumstances. Its relation and mechanics in human body and surroundings.
ENGR 106 Introduction to Engineering
Introduction to the art and science of engineering through the basics of mechanical, electrical, industrial and computer systems. Topics covered include: definition and history of engineering; ethics and social responsibility; engineering design process; engineering solutions; estimations and approximations; dimensions; units and conversions; mathematics and computer solutions; life- long learning; mechanics; energy and thermal sciences; electricity and electronics; materials; manufacturing; economics; statistics, and introduction to the various engineering disciplines and mechanical engineering sub-disciplines.
MATH 205 Linear Algebra and Differential Equations
Linear algebra including systems of linear equations; matrices, inverses of matrices; determinants; vector spaces and subspaces, bases and dimension. First order differential equations, including direction fields, separation of variables, first order linear equations, growth and decay, nonlinear models.(Prerequisite: MATH 201 or consent of instructor).
ENGR 211 Introduction to Programming
This course will provide a hands-on introduction to programming using Python with little or no prior experience in programming computers. The course will focus on planning and organizing programs, as well as the grammar of the Python programming language. Lectures will be interactive featuring in-class exercises with lots of support from the course staff. More advanced concepts in computer programming and software development will be introduced in the later stages of the course. The overarching goal in this course is to build an Engineer mindset in preparation for the upper level courses in EECS department curriculum.
ENGR 212 Programming Practice
This course will get the student acquire hands-on skills while doing advanced programming using Python and Django. Advanced concepts in computer programming and software development (Internet Systems and Web framework) will be introduced in the beginning stages of the course. The overarching goal in this course is to build an Engineer mindset in preparation for the upper level courses in EECS department curriculum.
ENGR 251 Probability for Engineers
Collection, organization and presentation of data. Introduction to probability theory, counting theorems, conditional probability and independence. Random variables, expectation, discrete probability models, continuous probability models, normal and related distributions. Sampling distributions, central limit theorem. Point and interval estimation.  (Prerequisite: MATH 201 or consent of instructor)
EECS 201 System Design Fundamentals
An integrated introduction to electrical engineering and computer science, taught using substantial laboratory experiments on devices with sensing capabilities. Key issues in the design of engineered artifacts operating in the natural world: measuring and modeling system behaviors; assessing errors in sensors and effectors; specifying tasks; designing solutions based on analytical and computational models; planning, executing, and evaluating experimental tests of performance; refining models and designs. Issues addressed in the context of computer programs, control systems, probabilistic inference problems, circuits and transducers, which all play important roles in achieving robust operation of a large variety of engineered systems.
EECS 202 Basic Digital Communication with Networking
This lecture is designed as an introductory digital logic design and microprocessor course. Topics covered by this course includes: Binary and non-binary systems, Boolean algebra, digital design techniques, logic gates, logic minimization, standard combinational circuits, sequential circuits, flip-flops, synthesis of synchronous sequential circuits, PLAs, ROMs, RAMs. Principles of hardware and software microcomputer interfacing; Experiments with specially designed laboratory facilities. Assembly language programming. (Lecture and laboratory).
EECS 214 Unix Operating System
This course is to provide students with experience with a variety of UNIX utilities, the UNIX shell command language, and facilities for managing directories on multiple computers, implementing a personal database, reformatting text, and searching for online resources. In the process of learning the UNIX operating system, they will be applying knowledge of mathematics, science and engineering. Topics covered include use of several utilities (comm, cut, head, tail, sort, tr, wc) alone and in combination, customization of oneâ€™s .login and X initialization files, navigation through the UNIX file directory and through various online documentation resources,  job control, shell scripting, network use (ssh, scp, rlogin, rcp, rsh, telnet, ftp, mail) and web browsing, using and comparing compression and archiving utilities, sed used in combination with shell scripts, regular expressions, make, find, and awk.
EECS 216 Signals and Systems
Covers the fundamentals of signal and system analysis, with applications drawn from filtering, audio and image processing, communications, and automatic control. Topics include convolution, Fourier series and transforms, sampling and discrete-time processing of continuous-time signals, modulation, Laplace and Z-transforms, and feedback systems.
CS 351 Computer Architecture
Lectures and labs illustrate how to build a multicore computer system. Topics include parallelism, instruction-set architecture, memory hierarchy, and communication primitives. Using a field-programmable gate array (FPGA) board, programmed with a simple multicore processor and a minimal software environment, students develop Verilog and software to implement different hardware/software designs for caches, messages, shared memory, and coordination primitives. The labs culminate in a term project which students describe in a design paper and in-class presentation. Provides instruction in written and oral communication.
CS 352 Computer Systems
Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Two design projects. Students engage in extensive written communication exercises.
CS 361 Software
This course introduces concepts and techniques relevant to the production of large software systems. Students are taught a programming method based on the recognition and description of useful abstractions. Topics include: modularity; specification; data abstraction; object modeling; design patterns; and testing. Several programming projects of varying size undertaken by students working individually and in groups.
CS 362 Machine Intelligence
This course introduces students to the basic knowledge representation, problem solving, and learning methods of machine intelligence. Upon completion of this course, students should be able to: develop intelligent systems by assembling solutions to concrete computational problems, understand the role of knowledge representation, problem solving, and learning in intelligent-system engineering, and appreciate the role of problem solving, vision, and language in understanding human intelligence from a computational perspective.
CS 371 Data Structures and Algorithms
This course provides an introduction to mathematical modeling of computational problems. It covers the common algorithms, algorithmic paradigms, and data structures used to solve these problems. The course emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems.
CS 372 Advanced Algorithms
This course teaches techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics covered include: sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; amortized analysis; graph algorithms; shortest paths; network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
ENGR 422 - Numerical Analysis for Engineers
The numerical methods for solving engineering problems are studied.   The numerical representation of numbers and the sources of error are discussed. Solution methods for the roots of equations, linear algebraic equations, numerical differentiation and integration, ordinary and partial differential equations, regression and interpolation are studied. Basics in MATLAB are covered and numerical programming applications are offered.
ENGR 497 Global Design Project I
Investigation and report on a special project under the direction of a faculty advisor. Involves handling and solving a well defined engineering problem of practical nature fully by applying a synthesis of knowledge and skills acquired in different courses in a particular branch of engineering.
ENGR 498 Global Design Project II
Investigation and report on a special project under the direction of a faculty advisor. Involves handling and solving a well defined engineering problem of practical nature fully by applying a synthesis of knowledge and skills acquired in different courses in a particular branch of engineering.
EECS 402 Entrepreneurship
Successful startups do not follow the traditional product-centric launch model. Through trial and error, hiring and firing, successful startups all invent a parallel process to Product Development. This process is focused on customer learning and discovery, and is called Customer Development. Students learn A-to-Z aspects of this radical reexamination of new product introduction process, successful strategies to listen to your customers and addressing their needs head first before product launch, and effective market validation.
EECS 403 Digital Circuit Design
This lecture provides the design and analysis of digital integrated circuits. In particular it focuses on Logic families, comparators, A/D and D/A converters, combinational systems, sequential systems, solid-state memory, large-scale integrated circuits, and design of electronic systems. Parasitics, transmission-line effects, packaging. Analog to Digital interfaces. Linear and switching mode power conversion.
EECS 404 Communication Circuits
The course covers a brief review of analog and digital communication concepts, contemporary receiver transmitter architectures for modern wired and wireless communication systems, delay-locked loops (DLLs), fractional-N synthesizers, phase locked loops and clock recovery circuits. The course involves design and CAD activity.
EECS 405 RF Circuit Design
The course provides thorough introduction to the fundamental concepts of RF design, including nonlinearity, interference and noise. Modulation and detection theory; multiple access techniques, and circuits pertinent to current wireless networks. The course also involves CAD activity.
EECS 413 Wireless Communications
Introduction to wireless communications systems. Wireless channel modeling. Single carries, spread spectrum, and multi-carrier wireless modulation schemes. Diversity techniques. Multiple-access schemes. Transceiver design and system level tradeoffs. Brief overview of GSM, CDMA, 3G and other wireless standards.
EECS 415 Digital Signal Processing
Introduction to discrete Fourier series and transforms. Design of Analog and digital filters. Fast-Fourier transforms, sampling, and modulation for discrete time signals and systems. Consideration of stochastic signals and linear processing of stochastic signals using correlation functions and spectral analysis. Introduction to Matlab tools and matlab based signal processing projects.
EECS 416 Image and Video Processing
This course is divided into two parts: digital image processing and digital video processing. The first part covers the fundamentals of digital image processing such as image sampling and quantization, color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, wavelets, noise reduction and restoration, feature extraction and recognition tasks, and image registration. The second part of the course covers the fundamentals of digital video processing, which include spatio-temporal sampling, motion analysis, parametric motion models, motion-compensated filtering, and video processing operations including noise reduction, restoration, superresolution, deinterlacing and video sampling structure conversion, and compression (frame-based and object-based methods).
EECS 418 Information Theory
Information theory is the science of operations on data such as compression, storage, and communication. It is among the few disciplines fortunate to have a precise date of birth: 1948, with the publication of Claude E. Shannon's paper entitled "A Mathematical Theory of Communication". This course will explore the basic concepts of Information theory. It is a prerequisite for research in this area, and highly recommended for students planning to delve into the fields of communications, data compression, and statistical signal processing. The intimate acquaintance that we will gain with measures of information and uncertainty - such as mutual information, entropy, and relative entropy - would be invaluable also for students, researchers, and practitioners in fields ranging from neuroscience to machine learning. Also encouraged to enroll are students of statistics and probability, who will gain an appreciation for the interplay between information theory, combinatorics, probability, and statistics.
EECS 421 Antennas and Propagations
Basic theory of radiation. Analysis and synthesis of antennas and antenna arrays. Adaptive arrays and digital beam forming for advanced wireless links. Friis transmission formula. Wireless communication equations for cell site and mobile antennas, interference, slow and fast fading in mobile communication.
EECS 423 Optics
Basic principles of optics: light sources and propagation of light; geometrical optics, lenses and imaging; ray tracing and lens aberrations; interference of light waves, coherent and incoherent light beams; Fresnel and Fraunhofer diffraction. Overview of modern optics.
EECS 424 Photonics and Lasers
Wave theory of light, optical waveguides and fibers, optical transmission system, heterojunction structures, laser theory, semiconductor lasers, photodiodes and optical detection, photometry and radiometry.
EECS 451 Database Systems
This course relies on primary readings from the database community to introduce graduate students to the foundations of database systems, focusing on basics such as the relational algebra and data model, schema normalization, query optimization, and transactions. Topics related to the engineering and design of database systems, including: data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel, and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying.
EECS 456 Principles of Computer Systems
This course provides an introduction to the basic principles of computer systems, with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention is paid to concurrent and distributed systems. Topics covered include: specification and verification, concurrent algorithms, synchronization, naming, networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
EECS 457 Performance Engineering of Software Systems
Modern computing platforms provide unprecedented amounts of raw computational power. But significant complexity comes along with this power, to the point that making useful computations exploit even a fraction of the potential of the computing platform is a substantial challenge. Indeed, obtaining good performance requires a comprehensive understanding of all layers of the underlying platform, deep insight into the computation at hand, and the ingenuity and creativity required to obtain an effective mapping of the computation onto the machine. The reward for mastering these sophisticated and challenging topics is the ability to make computations that can process large amount of data orders of magnitude more quickly and efficiently and to obtain results that are unavailable with standard practice. This course is a hands-on, project-based introduction to building scalable and high-performance software systems. Topics include: performance analysis, algorithmic techniques for high performance, instruction-level optimizations, cache and memory hierarchy optimization, parallel programming, and building scalable distributed systems.
EECS 461 Machine Learning
This course is an introductory course on machine learning which gives an overview of many concepts, techniques, and algorithms in machine learning, beginning with topics such as classification and linear regression and ending up with more recent topics such as boosting, support vector machines, hidden Markov models, and Bayesian networks. The course will give the student the basic ideas and intuition behind modern machine learning methods as well as a bit more formal understanding of how, why, and when they work. The main theme in the course is statistical inference that provides the foundation for most of the methods covered.
EECS 464 Computer Vision
Application of computer vision techniques to consumer-level applications such as stitching, exposure bracketing, morphing, etc. will be the focus. Topics covered will include an overview of problems in computer vision, image formation, image processing, feature detection and matching, segmentation, dense motion estimation, and stereo correspondence as time permits.
EECS 465 Introduction to Robotics
This is a course on modeling, design, planning and control of robot systems. It surveys results from geometry, kinematics, statics, dynamics and control theory.
EECS 468 Bioinformatics
This course is an algorithmic principles driving in bioinformatics. It emphasizes the relatively few design techniques used in diverse range of practical problems in biology such as DNA mapping, genome rearrangements, statistical methods for gene prediction and molecular evolution.
EECS 471 Distributed Algorithms
This course provides an introduction to the most important basic results in the area of distributed algorithms, and prepare interested students to begin independent research or take a more advanced course in distributed algorithms. Distributed algorithms are algorithms designed to run on multiple processors, without tight centralized control. In general, they are harder to design and harder to understand than single-processor sequential algorithms. Distributed algorithms are used in many practical systems, ranging from large computer networks to multiprocessor shared-memory systems. They also have a rich theory, which forms the subject matter for this course. The core of the material will consist of basic distributed algorithms and impossibility results. This will be supplemented by some updated material on topics such as self-stabilization, wait-free computability, and failure detectors, and some new material on scalable shared-memory concurrent programming.
EECS 474 Networks
Networks are ubiquitous. Internet that links us to and enables information flows with the rest of the world is the most visible example. Our society is organized around networks of friends and colleagues. These networks determine our information, influence our opinions, and shape our political attitudes, and link us to everybody else in Turkey and in the world. Economic and financial markets look much more like networks than anonymous marketplaces. Firms interact with the same suppliers and customers and use Web-like supply chains. Financial linkages, both among banks and between consumers, companies and banks, also form a network over which funds flow and risks are shared. Systemic risk in financial markets often results from the counterparty risks created within this financial network. Food chains, interacting biological systems and the spread and containment of epidemics are some of the other natural and social phenomena that exhibit a marked networked structure. This course will introduce the tools for the study of networks. It will show how certain common principles permeate the functioning of these diverse networks and how the same issues related to robustness, fragility, and interlinkages arise in different types of networks.
EECS 481 Introduction to Cryptography
This is an introductory course on methods, algorithms, techniques, and tools of cryptography. We study in detail algorithmic and mathematical aspects of cryptographic methods and protocols, such as secret-key cryptography, public-key cryptography, hash functions, and digital signatures. We show how these techniques are used to solve particular data and communication security problems. This course material is useful for computer science, electrical engineering, and mathematics students who are interested in learning how cryptographic algorithms and methods are embedded in information systems, providing confidentiality, integrity, non-repudiation, and authenticity of stored and transmitted digital data.
EECS 482 Cryptographic Engineering
This is a graduate course is designed for computer science, mathematics, electrical engineering students interested in understanding, designing, developing, testing, and validating cryptographic software and hardware. We will study algorithms, methods, and techniques in order to create state-of-art cryptographic embedded software and hardware using common platforms and technologies.
EECS 483 Network Security
In this course, we study the theoretical and practical aspects of network security. We start with a threat model, and describe vulnerabilities of computer networks to attacks by adversaries and hackers using a variety of techniques. We then study methods and techniques to circumvent or defend against these attacks and to minimize their damage. In this context, we study cryptographic techniques and protocols, network security protocols, digital signatures and authentication protocols, network security practice, and wireless network security. Security attacks, mechanisms, and services. Network security and access security models. Overview of secret-key and public-key cryptography. Authentication protocols and key management. Network security practice. Email security. IP security and web security. Intrusion detection and prevention systems. Firewalls and virtual private networks. Wireless network security.